"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥—É–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ OpenAI Whisper
"""
import os
from pathlib import Path

# –ü—É—Ç—å –∫ –º–æ–¥—É–ª—é
MODULE_DIR = Path(__file__).parent

def load_env_file(file_path: Path) -> dict:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"""
    env_vars = {}
    if file_path.exists():
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω .env –∏–∑ {file_path}")
        with open(file_path, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    env_vars[key] = value
                    os.environ[key] = value
    else:
        print(f"‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {file_path.parent}")
        print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è")
    return env_vars

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞ –º–æ–¥—É–ª—è
module_env = load_env_file(MODULE_DIR / '.env')

# –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REQUIRED_VARS = ['OPENAI_API_KEY']
missing_vars = [var for var in REQUIRED_VARS if not os.getenv(var)]

if missing_vars:
    print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
    OPENAI_API_KEY = None
else:
    OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥—É–ª—è
MODULE_CONFIG = {
    'model': os.getenv('WHISPER_MODEL', 'whisper-1'),
    'language': os.getenv('WHISPER_LANGUAGE', 'auto'),  # 'auto' –¥–ª—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    'temperature': float(os.getenv('WHISPER_TEMPERATURE', '0')),
    'max_file_size': 25 * 1024 * 1024,  # 25MB - –ª–∏–º–∏—Ç Telegram –¥–ª—è –∞—É–¥–∏–æ
    'supported_formats': ['.mp3', '.mp4', '.mpeg', '.mpga', '.m4a', '.wav', '.webm', '.ogg']
} 